
name: CI

on:
  workflow_dispatch:
    inputs:
      
      
      choice1:
        type: choice
        description: Make a choice
        options:
        
        - apply
        - destroy
      envchoice:
        type: choice
        description: select an env
        options:
        
        - dev
        - test
      
permissions:
    id-token: write # This is required for requesting the JWT
    contents: read  # This is required for actions/checkout
    
jobs:
        terraform:
            name: 'Terraform Apply to Digital Sandbox'
            #runs-on: ubuntu-latest
            runs-on: ubuntu-22.04
            environment: DigitalSandboxInfraDeploy
        
            # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
            defaults:
                run:
                    shell: bash
                    working-directory: .     
        
            steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout
              uses: actions/checkout@v3
        
            
            - name: AWS Credentials
              id: aws-credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                role-to-assume: arn:aws:iam::318992891765:role/linux-desktop-role  # Note that this is note the same role used in the provider config    
                role-duration-seconds: 3600 # the ttl of the session, in seconds.
                aws-region: us-east-1 # use your region here.
                role-skip-session-tagging: true     
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
        
            - name: Terraform Init
              run: |
                terraform init

            - name: Terraform Plan
              run: terraform plan 
            - name: Terraform Apply
              run: terraform apply -auto-approve
                #- name: Terraform Destroy
              #if: ${{ github.event.inputs.choice1 == 'destroy' && (github.event.inputs.envchoice == 'dev' || github.event.inputs.envchoice == 'test') }}
              #run: |
              #  terraform destroy -auto-approve -input=false -var-file=${{ github.event.inputs.envchoice }}.tfvars -target module.kubernetes_addons
              #  terraform destroy -auto-approve -input=false -var-file=${{ github.event.inputs.envchoice }}.tfvars -target module.eks_blueprints
              #  terraform destroy -auto-approve -input=false -var-file=${{ github.event.inputs.envchoice }}.tfvars -target module.vpc
               
                
              #run: echo "we r in destroy"
            
              
                

